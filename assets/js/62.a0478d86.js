(window.webpackJsonp=window.webpackJsonp||[]).push([[62],{352:function(t,s,a){"use strict";a.r(s);var n=a(10),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"依赖注入方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#依赖注入方式"}},[t._v("#")]),t._v(" 依赖注入方式")]),t._v(" "),s("p"),s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#支持的属性类型"}},[t._v("支持的属性类型")]),s("ul",[s("li",[s("a",{attrs:{href:"#值类型"}},[t._v("值类型")])]),s("li",[s("a",{attrs:{href:"#指针类型"}},[t._v("指针类型")])]),s("li",[s("a",{attrs:{href:"#接口类型"}},[t._v("接口类型")])]),s("li",[s("a",{attrs:{href:"#slice-类型"}},[t._v("slice 类型")])]),s("li",[s("a",{attrs:{href:"#map-类型"}},[t._v("map 类型")])])])]),s("li",[s("a",{attrs:{href:"#gonerid-和-具名注入"}},[t._v("GonerId 和 具名注入")]),s("ul",[s("li",[s("a",{attrs:{href:"#gonerid"}},[t._v("GonerId")])]),s("li",[s("a",{attrs:{href:"#具名注入"}},[t._v("具名注入")])])])]),s("li",[s("a",{attrs:{href:"#私有属性注入"}},[t._v("私有属性注入")])]),s("li",[s("a",{attrs:{href:"#其他注入方式"}},[t._v("其他注入方式")]),s("ul",[s("li",[s("a",{attrs:{href:"#函数参数注入"}},[t._v("函数参数注入")])]),s("li",[s("a",{attrs:{href:"#配置参数注入"}},[t._v("配置参数注入")])]),s("li",[s("a",{attrs:{href:"#http请求参数注入"}},[t._v("HTTP请求参数注入")])])])])])]),s("p"),t._v(" "),s("p",[t._v("为了区分结构体属性是否需要依赖注入，我们引入一个标签——"),s("code",[t._v("gone")]),t._v("，拥有"),s("code",[t._v("gone")]),t._v("标签的属性将在Gone启动过程中被注入需要的依赖。")]),t._v(" "),s("h2",{attrs:{id:"支持的属性类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#支持的属性类型"}},[t._v("#")]),t._v(" 支持的属性类型")]),t._v(" "),s("h3",{attrs:{id:"值类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#值类型"}},[t._v("#")]),t._v(" 值类型")]),t._v(" "),s("p",[t._v("结构体的属性为某个机构体的值类型，如下面代码中的"),s("code",[t._v("Boss.Seller")]),t._v("：")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Worker "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tgone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Flag\n\tName      "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Boss "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    gone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Flag\n    Seller  Worker "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`gone:"*"`')]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//值类型")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("注意：不推荐使用值类型做注入")]),t._v(" "),s("p",[t._v("“"),s("strong",[t._v("值类型")]),t._v(" 的赋值和传参都是传递的拷贝”，这意味着我们如果使用 "),s("strong",[t._v("值类型")]),t._v(" 注入时，实际上产生了一个新的“对象”，新分配了一块内存，并且新旧对象只有在“传递那一刻”是相等，他们在内存中是独立的；这可能导致一些不符合“直觉”的结果，举个例子：")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" BGoner "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tgone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Flag\n\n\ta1 AGoner  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`gone:"A1"`')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 值注入")]),t._v("\n\ta2 AGoner  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`gone:"A1"`')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 值注入")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("g "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("BGoner"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("AfterRevive")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" gone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("AfterReviveError "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"dapeng"')]),t._v("\n\tg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"wang"')]),t._v("\n\n\tfmt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a1 is eq a2: %v"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" g"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" g"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),s("p",[t._v("在上面的代码中，打印的结果会是 "),s("code",[t._v("false")]),t._v("。")])]),t._v(" "),s("h3",{attrs:{id:"指针类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#指针类型"}},[t._v("#")]),t._v(" 指针类型")]),t._v(" "),s("p",[t._v("接收注入的结构体属性是另一个结构体的指针，如下面代码的"),s("code",[t._v("Boss.Seller")]),t._v("的类型为 "),s("code",[t._v("*Worker")]),t._v(":")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Worker "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tgone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Flag\n\tName      "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Boss "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    gone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Flag\n    Seller  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("Worker "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`gone:"*"`')]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//指针类型")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"接口类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#接口类型"}},[t._v("#")]),t._v(" 接口类型")]),t._v(" "),s("p",[t._v("接收注入的结构体属性是一个接口，如下面代码的"),s("code",[t._v("Boss.Seller")]),t._v("的类型为 "),s("code",[t._v("Seller")]),t._v("，Gone会从注册的Goners中查找实现了"),s("code",[t._v("Seller")]),t._v("接口的Goner赋值给"),s("code",[t._v("Boss.Seller")]),t._v("。")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Seller "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Sell")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("error")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Boss "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    gone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Flag\n    Seller Seller "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`gone:"*"`')]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//接口类型")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"slice-类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#slice-类型"}},[t._v("#")]),t._v(" slice 类型")]),t._v(" "),s("p",[t._v("接收注入的结构体属性还可以是 slice 类型，slice 的元素类型允许为 值类型（由于值拷贝，不推荐使用）、指针类型 和 接口类型，如下代码中的"),s("code",[t._v("Boss.Sellers")]),t._v("、"),s("code",[t._v("Boss.Workers")]),t._v("、"),s("code",[t._v("Boss.Persons")]),t._v("，Gone会尝试间类型兼容的所有goners添加到slice中。")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Worker "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tgone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Flag\n\tName      "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Seller "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Sell")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("error")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Boss "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    gone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Flag\n    Sellers "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("Seller  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`gone:"*"`')]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Slice 类型，元素为接口类型")]),t._v("\n    Workers "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("Worker "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`gone:"*"`')]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Slice 类型，元素为指针类型")]),t._v("\n    Persons "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("Worker  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`gone:"*"`')]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Slice 类型，元素为值类型")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"map-类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#map-类型"}},[t._v("#")]),t._v(" map 类型")]),t._v(" "),s("p",[t._v("接收注入的结构体属性还可以是 map 类型，map 的元素类型允许为 值类型（由于值拷贝，不推荐使用）、指针类型 和 接口类型。map 的 key 只能被定义为"),s("code",[t._v("string")]),t._v("类型，被注入后map key 的值为 GonerId（后面介绍什么是GonerId）。")]),t._v(" "),s("p",[s("strong",[t._v("举个例子")])]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Worker "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tgone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Flag\n\tName      "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Seller "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Sell")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("error")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Boss "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    gone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Flag\n    Sellers "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("map")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("Seller  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`gone:"*"`')]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Map 类型，元素为接口类型")]),t._v("\n    Workers "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("map")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("Worker "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`gone:"*"`')]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Map 类型，元素为指针类型")]),t._v("\n    Persons "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("map")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("Worker  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`gone:"*"`')]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Map 类型，元素为值类型")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"gonerid-和-具名注入"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#gonerid-和-具名注入"}},[t._v("#")]),t._v(" GonerId 和 具名注入")]),t._v(" "),s("h3",{attrs:{id:"gonerid"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#gonerid"}},[t._v("#")]),t._v(" GonerId")]),t._v(" "),s("p",[t._v("Goner注册到Gone框架，支持传递一个可选参数"),s("strong",[t._v("GonerId")]),t._v("，如果不传也会随机生成一个，如下：")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Worker "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tgone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Flag\n\tName      "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Seller "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Sell")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("error")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Boss "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    gone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Flag\n    Sellers "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("map")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("Seller  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`gone:"*"`')]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Map 类型，元素为接口类型")]),t._v("\n    Workers "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("map")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("Worker "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`gone:"*"`')]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Map 类型，元素为指针类型")]),t._v("\n    Persons "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("map")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("Worker  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`gone:"*"`')]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Map 类型，元素为值类型")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Priest")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cemetery gone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Cemetery"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("error")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tcemetery"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Bury")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("Worker"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" gone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GonerId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"worker-01"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//注册；使用worker-01做GonerId")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Bury")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("Worker"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" gone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GonerId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"worker-02"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//注册；使用worker-02做GonerId")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Bury")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("Boss"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//匿名注册，不关心GonerId是什么")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"具名注入"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#具名注入"}},[t._v("#")]),t._v(" 具名注入")]),t._v(" "),s("p",[t._v("前面的例子中，依赖注入标记"),s("code",[t._v("gone")]),t._v("的值都是"),s("code",[t._v("*")]),t._v("，意思让Gone自动寻找或者构建兼容的类型完成注入，我们称之为 "),s("strong",[t._v("匿名注入")]),t._v("。另外，Gone支持在"),s("code",[t._v("gone")]),t._v("标签赋予一个值作为GonerId，要求Gone查找特定GonerId的Goner完成依赖注入，也就是 "),s("strong",[t._v("具名注入")]),t._v("。")]),t._v(" "),s("p",[t._v("如下面代码中，"),s("code",[t._v("Boss.Manager")]),t._v("的注入，Gone会自动寻找GonerId为"),s("code",[t._v("worker-01")]),t._v("的Goner，完成注入。")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Boss "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tgone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Flag\n\tManager "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("Worker "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`gone:"worker-01"`')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//具名注入")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"私有属性注入"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#私有属性注入"}},[t._v("#")]),t._v(" 私有属性注入")]),t._v(" "),s("p",[t._v("前面的例子中，所有的属性都是 "),s("strong",[t._v("共有属性")]),t._v(" （又称Exported，是大写字母打头的，在包外部可以访问的）；Gone实际是支持在私有属性上完成依赖注入的，如下：")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Boss "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tgone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Flag\n\tmanager "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("Worker "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`gone:"worker-01"`')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//manager为私有属性也是可以的")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("我们"),s("strong",[t._v("推荐使用私有属性注入")]),t._v("，因为被依赖注入的“对象”一般仅限于内部使用，使用私有属性注入，可以减少代码的耦合度，提高代码的可维护性。")]),t._v(" "),s("h2",{attrs:{id:"其他注入方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#其他注入方式"}},[t._v("#")]),t._v(" 其他注入方式")]),t._v(" "),s("h3",{attrs:{id:"函数参数注入"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数参数注入"}},[t._v("#")]),t._v(" 函数参数注入")]),t._v(" "),s("p",[t._v("Gone还支持对函数的参数进行依赖注入，"),s("a",{attrs:{href:"https://goner.fun/zh/guide/inject-3-func.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("函数参数注入"),s("OutboundLink")],1)]),t._v(" "),s("h3",{attrs:{id:"配置参数注入"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置参数注入"}},[t._v("#")]),t._v(" 配置参数注入")]),t._v(" "),s("p",[t._v("配置参数的注入，是用内置组件"),s("a",{attrs:{href:"https://goner.fun/zh/guide/goner-config.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("goner/config"),s("OutboundLink")],1),t._v("实现的。")]),t._v(" "),s("h3",{attrs:{id:"http请求参数注入"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http请求参数注入"}},[t._v("#")]),t._v(" HTTP请求参数注入")]),t._v(" "),s("p",[t._v("HTTP请求参数的注入，是指在处理HTTP请求时，将请求的相关参数注入到处理函数的参数上，这部分功能由内置组件"),s("a",{attrs:{href:"https://goner.fun/zh/guide/goner-gin.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("goner/gin"),s("OutboundLink")],1),t._v("实现。")])])}),[],!1,null,null,null);s.default=e.exports}}]);