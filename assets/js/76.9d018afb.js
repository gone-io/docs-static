(window.webpackJsonp=window.webpackJsonp||[]).push([[76],{366:function(a,e,t){"use strict";t.r(e);var s=t(10),n=Object(s.a)({},(function(){var a=this,e=a._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"gone-辅助工具"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#gone-辅助工具"}},[a._v("#")]),a._v(" gone 辅助工具")]),a._v(" "),e("h2",{attrs:{id:"安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[a._v("#")]),a._v(" 安装")]),a._v(" "),e("p",[a._v("执行如下命令：")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("go "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" github.com/gone-io/gonectr@latest\ngo "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" go.uber.org/mock/mockgen@latest\n")])])]),e("h2",{attrs:{id:"使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用"}},[a._v("#")]),a._v(" 使用")]),a._v(" "),e("h3",{attrs:{id:"测试是否正常安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#测试是否正常安装"}},[a._v("#")]),a._v(" 测试是否正常安装")]),a._v(" "),e("p",[a._v("成功安装后，执行"),e("code",[a._v("gonectr -h")]),a._v("，建获得如下结果：")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("➜ gonectr "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-h")]),a._v("\ngonectr is a command-line tool designed "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" generating Gone projects\nand serving as a utility "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" Gone projects, such as code generation,\ncompilation, and running Gone projects.\n\nUsage:\n  gonectr "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("flags"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n  gonectr "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("command"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n\nAvailable Commands:\n  build       build gone project\n  completion  Generate the autocompletion script "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" the specified shell\n  create      Create a new Gone Project\n  generate    generate gone loading code and "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("import")]),a._v(" code\n  "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("help")]),a._v("        Help about any "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("command")]),a._v("\n  mock        generate mock goner code "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" interface\n  priest      generate priest "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v("\n  run         run gone project\n\nFlags:\n  -h, "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--help")]),a._v("      "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("help")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" gonectr\n  -v, "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--version")]),a._v("   Show version\n\nUse "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"gonectr [command] --help"')]),a._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("more")]),a._v(" information about a command.\n")])])]),e("h3",{attrs:{id:"生成项目"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#生成项目"}},[a._v("#")]),a._v(" 生成项目")]),a._v(" "),e("p",[e("strong",[a._v("命令格式：")])]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("gonectr create "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("-t "),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${template}")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("-m "),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${modName}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${appName}")]),a._v("\n")])])]),e("p",[e("strong",[a._v("参数说明:")])]),a._v(" "),e("ul",[e("li",[e("code",[a._v("-t")]),a._v(": 指定模板，默认为"),e("code",[a._v("web")]),a._v("，支持的模板类型如下：\n"),e("ul",[e("li",[a._v("web：生成空白的web项目")]),a._v(" "),e("li",[a._v("web+mysql：生成web项目，并集成mysql")])])]),a._v(" "),e("li",[e("code",[a._v("-m")]),a._v(": 指定项目模块名称，默认为项目名")]),a._v(" "),e("li",[e("code",[a._v("appName")]),a._v(": 指定项目名，默认为demo")])]),a._v(" "),e("p",[a._v("例子可以参考"),e("a",{attrs:{href:"https://goner.fun/zh/quick-start/web.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("快速开始#Web 项目"),e("OutboundLink")],1)]),a._v(" "),e("h3",{attrs:{id:"生成priest函数【废弃中】"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#生成priest函数【废弃中】"}},[a._v("#")]),a._v(" 生成Priest函数【废弃中】")]),a._v(" "),e("p",[a._v("该命令的作用是扫描代码中的特殊注释"),e("code",[a._v("//go:gone")]),a._v("，生成一个"),e("strong",[a._v("Priest")]),a._v("函数，将其标注的New函数生成的"),e("strong",[a._v("Goner")]),a._v("注册到Gone中。")]),a._v(" "),e("blockquote",[e("p",[a._v("关于"),e("strong",[a._v("Priest")]),a._v("函数、"),e("strong",[a._v("Goner")]),a._v("的详细介绍，请参考"),e("a",{attrs:{href:"https://goner.fun/zh/guide/core-concept.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("Gone的核心概念"),e("OutboundLink")],1),a._v("。")])]),a._v(" "),e("p",[e("strong",[a._v("命令格式：")])]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("gonectr priest "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-s")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${scanPackageDir}")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${pkgName}")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${funcName}")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-o")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${outputFilePath}")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("-w"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("--stat"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n")])])]),e("p",[e("strong",[a._v("参数说明:")])]),a._v(" "),e("ul",[e("li",[e("code",[a._v("-s")]),a._v(": 指定扫描的包路径，不可缺省")]),a._v(" "),e("li",[e("code",[a._v("-p")]),a._v(": 指定生成代码的包名，不可缺省")]),a._v(" "),e("li",[e("code",[a._v("-f")]),a._v(": 指定生成Priest函数的名称，不可缺省")]),a._v(" "),e("li",[e("code",[a._v("-o")]),a._v(": 指定生成Priest函数的输出文件路径，不可缺省")]),a._v(" "),e("li",[e("code",[a._v("-w")]),a._v(": 监听文件变化，自动生成，默认为"),e("code",[a._v("false")])]),a._v(" "),e("li",[e("code",[a._v("--stat")]),a._v(": 输出统计信息，默认为"),e("code",[a._v("false")])])]),a._v(" "),e("p",[a._v("例子可以参考"),e("a",{attrs:{href:"https://goner.fun/zh/guide/auto-gen-priest.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("自动生成Priest"),e("OutboundLink")],1)]),a._v(" "),e("h3",{attrs:{id:"使用gonectr-mock生成mock代码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用gonectr-mock生成mock代码"}},[a._v("#")]),a._v(" 使用"),e("code",[a._v("gonectr mock")]),a._v("生成Mock代码")]),a._v(" "),e("p",[a._v("该命令依赖"),e("code",[a._v("go.uber.org/mock/mockgen")]),a._v("，需要先安装mockgen（"),e("code",[a._v("go install go.uber.org/mock/mockgen@latest")]),a._v("）。该命令会调用"),e("code",[a._v("mockgen")]),a._v("，生成mock代码，然后再将将生成的mock代码标记为Gone，使其可以注入到Gone项目中。")]),a._v(" "),e("p",[e("strong",[a._v("命令格式：")])]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("➜ gonectr mock "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-h")]),a._v("\ngenerate mock goner code "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" interface\n\nUsage:\n  gonectr mock "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("flags"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n\nFlags:\n  -d, "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--destination")]),a._v(" string   mock代码生成目录\n  -h, "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--help")]),a._v("                 "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("help")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" mock\n  -p, "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--package")]),a._v(" string       生成代码所在package名\n  -s, --scan-dir string      将扫描的目录，接口定义文件所在的目录\n")])])]),e("p",[a._v("例子可以参考"),e("a",{attrs:{href:"https://goner.fun/zh/guide/unit-test.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("单元测试"),e("OutboundLink")],1)])])}),[],!1,null,null,null);e.default=n.exports}}]);