(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{330:function(t,s,n){"use strict";n.r(s);var a=n(10),e=Object(a.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"使用traceid追踪日志"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用traceid追踪日志"}},[t._v("#")]),t._v(" 使用traceId追踪日志")]),t._v(" "),s("p",[t._v("在Web应用中，一次请求可能会经过很多业务流程的处理；为了方便排查问题，我们希望所有业务流程打印的日志拥有一个统一的traceId；拥有traceId，就可以将整个业务流程的日志都串起来，回溯和分析问题出在哪个业务环节。\n在其他开源框架中，一般采用策略是在"),s("strong",[t._v("所有")]),t._v("的函数中都增加"),s("code",[t._v("context.Context")]),t._v("参数，golang官方也是这样推荐的。然而我们认为这样平白无故的多打一些代码实在很难受，我们希望不用在每个函数中传递额外参数实现打印日志中附件traceId。为此，我们在Gone中提供了一个内置的Goner来提供这样的功能。")]),t._v(" "),s("h2",{attrs:{id:"将相关goners埋葬到cemetery"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#将相关goners埋葬到cemetery"}},[t._v("#")]),t._v(" 将相关Goners埋葬到Cemetery")]),t._v(" "),s("blockquote",[s("p",[t._v("tip: 了解Gone的核心概念和术语请阅读："),s("a",{attrs:{href:"https://goner.fun/zh/guide/core-concept.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Gone的核心概念"),s("OutboundLink")],1)])]),t._v(" "),s("p",[t._v("在这里，我们采用"),s("code",[t._v("github.com/gone-io/gone/tree/main/goner")]),t._v("包中的 "),s("strong",[s("code",[t._v("BasePriest")])]),t._v(" 来完成相关Goners的埋葬。在"),s("code",[t._v("BasePriest")]),t._v("中会将 "),s("code",[t._v("tracer")]),t._v("、"),s("code",[t._v("config")]),t._v("、"),s("code",[t._v("logrus")]),t._v(" 相关的Goners同埋葬到Cemetery，这三个包一般一起使用。")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("MasterPriest")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cemetery gone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Cemetery"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("error")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("_")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" goner"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("BasePriest")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cemetery"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//埋葬其他Goners")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"简单使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#简单使用"}},[t._v("#")]),t._v(" 简单使用")]),t._v(" "),s("p",[t._v("在埋葬了tracer的情况下，我们通过注入的"),s("code",[t._v("logrus.Logger")]),t._v("接口打印日志时，日志中会自动添加一串traceId。")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//...")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" service "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    gone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Flag\n    log logrus"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Logger "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`gone:"gone-logger"`')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//具名注入到 嵌套的log属性上")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("svc "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("service"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Business")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("input "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("error")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//打印日志")]),t._v("\n\tsvc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Infof")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"input content is %s"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" input"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" input"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//...")]),t._v("\n")])])]),s("p",[t._v("如下，其中"),s("code",[t._v("061ad00f-8c0d-479c-bc4c-393e0cf2cca2")]),t._v("为traceId：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("2024-05-11 09:09:57.784|INFO|**/Users/jim/go/pkg/mod/github.com/gone-io/gone@v0.1.4/goner/gin/server.go:46**|061ad00f-8c0d-479c-bc4c-393e0cf2cca2|Server Listen At :8080\n")])])]),s("h2",{attrs:{id:"跨协程-goroutine-传递traceid"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#跨协程-goroutine-传递traceid"}},[t._v("#")]),t._v(" 跨协程（goroutine）传递traceId")]),t._v(" "),s("p",[t._v("前面例子中，如果没有新开协程是正常的，如果使用关键词"),s("code",[t._v("go")]),t._v("开一个新的协程，会发现协程打印的日志没有traceId。\n怎么解决，注入"),s("code",[t._v("tracer.Tracer")]),t._v("接口，使用之前的"),s("code",[t._v("Go")]),t._v("方法来代替"),s("code",[t._v("go")]),t._v("关键词来新开协程，如下：")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//...")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" service "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    gone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Flag\n    log logrus"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Logger "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`gone:"gone-logger"`')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//具名注入到 嵌套的log属性上")]),t._v("\n    tracer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Tracer "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`gone:"gone-tracer"`')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//注入tracer")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("svc "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("service"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Business")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("input "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("error")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n\tsvc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Go")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//新协程中打印日志")]),t._v("\n\t\tsvc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Infof")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"log in new goroutine"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" input"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//...")]),t._v("\n")])])]),s("h2",{attrs:{id:"跨进程-服务传递traceid"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#跨进程-服务传递traceid"}},[t._v("#")]),t._v(" 跨进程/服务传递traceId")]),t._v(" "),s("p",[t._v("在微服务中，一个web请求一般会跨域多个微服务，跨域微服务的方式一般会通过：")]),t._v(" "),s("ol",[s("li",[t._v("消息中间件\n为实现traceId在消息中间件中传递和更方便的使用消息中间件传递业务事件，我们开源了"),s("a",{attrs:{href:"https://github.com/gone-io/emitter",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/gone-io/emitter"),s("OutboundLink")],1),t._v("仓库，在这个仓库中实现了"),s("strong",[t._v("Rocket MQ")]),t._v("的适配，后续计划适配"),s("strong",[t._v("Kafka")]),t._v("、"),s("strong",[t._v("RabbitMQ")]),t._v("等主流的消息中间件。")]),t._v(" "),s("li",[t._v("RPC调用/内部http调用\n通过Gone内置的Goner "),s("a",{attrs:{href:"https://github.com/gone-io/gone/tree/main/goner/urllib",target:"_blank",rel:"noopener noreferrer"}},[t._v("urllib"),s("OutboundLink")],1),t._v(" 来给Gone Web程序发送http请求，traceId会自动在服务间传递。另外使用内置的 "),s("a",{attrs:{href:"https://github.com/gone-io/gone/tree/main/goner/grpc",target:"_blank",rel:"noopener noreferrer"}},[t._v("grpc"),s("OutboundLink")],1),t._v(" 来实现gRpc调用也能自动传递traceId。后续会支持更多的rpc调用。")])]),t._v(" "),s("h2",{attrs:{id:"多语言支持"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#多语言支持"}},[t._v("#")]),t._v(" 多语言支持")]),t._v(" "),s("p",[t._v("在http请求中传递traceId，是通过在请求头中增加了一个特殊的头"),s("code",[t._v("X-Trace-ID")]),t._v("来携带traceId。所以如果使用了多种开发语言，不同服务间只要遵守“在Client端请求时附件"),s("code",[t._v("X-Trace-ID")]),t._v("，在Server端处理请求时解析"),s("code",[t._v("X-Trace-ID")]),t._v("”，就能实现让traceId跨域不同语言开发的微服务。"),s("br"),t._v("\n后续会开发其他语言的包支持其他语言无缝接入。")])])}),[],!1,null,null,null);s.default=e.exports}}]);