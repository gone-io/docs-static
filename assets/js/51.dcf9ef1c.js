(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{341:function(t,s,n){"use strict";n.r(s);var a=n(10),e=Object(a.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"gone的核心概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#gone的核心概念"}},[t._v("#")]),t._v(" Gone的核心概念")]),t._v(" "),s("blockquote",[s("p",[t._v("“我们编写的代码，终究只是死物，除非他在 "),s("strong",[t._v("天国（程序）")]),t._v(" 被 "),s("strong",[t._v("复活（对Goners完成依赖的装配）")]),t._v("，为此我们需要将他 "),s("strong",[t._v("埋葬（注册）")]),t._v(" 在 "),s("strong",[t._v("墓园（Gone内部的Goners仓库）")]),t._v("。”")])]),t._v(" "),s("p"),s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#goner"}},[t._v("Goner")])]),s("li",[s("a",{attrs:{href:"#特殊goners"}},[t._v("特殊Goners")]),s("ul",[s("li",[s("a",{attrs:{href:"#🔮prophet-先知-率先知道装配完成"}},[t._v("🔮Prophet（先知，率先知道装配完成）")])]),s("li",[s("a",{attrs:{href:"#😇angel-天使-看护开始和结束"}},[t._v("😇Angel（天使，看护开始和结束）")])]),s("li",[s("a",{attrs:{href:"#🧛🏻‍♀️vampire-吸血鬼-扩展注入类型"}},[t._v("🧛🏻‍♀️Vampire（吸血鬼，扩展注入类型）")])])])]),s("li",[s("a",{attrs:{href:"#cemetery-goners仓库"}},[t._v("Cemetery（Goners仓库）")]),s("ul",[s("li",[s("a",{attrs:{href:"#bury-注册"}},[t._v("Bury（注册）")])]),s("li",[s("a",{attrs:{href:"#revive-装配"}},[t._v("Revive（装配）")])])])]),s("li",[s("a",{attrs:{href:"#heaven"}},[t._v("Heaven")])]),s("li",[s("a",{attrs:{href:"#priest-批量注册goners"}},[t._v("Priest (批量注册Goners)")])]),s("li",[s("a",{attrs:{href:"#总结"}},[t._v("总结")])])])]),s("p"),t._v(" "),s("h2",{attrs:{id:"goner"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#goner"}},[t._v("#")]),t._v(" Goner")]),t._v(" "),s("p",[s("strong",[t._v("Goner")]),t._v(" 是指实现了 "),s("code",[t._v("gone.Goner")]),t._v(" 接口的结构体实例指针；只有实现了"),s("code",[t._v("gone.Goner")]),t._v("接口的实例才能被注册到Gone中；实现"),s("code",[t._v("Goner")]),t._v("接口 有且只有 通过嵌入 "),s("strong",[s("code",[t._v("gone.Flag")])]),t._v(" 来实现。")]),t._v(" "),s("p",[t._v("举个例子，下面的worker就是一个goner：")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Worker "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tgone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Flag\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nworker "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("Worker"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Goner是Gone的组件，是实现依赖注入的关键：")]),t._v(" "),s("ol",[s("li",[t._v("Goner可以作为值被注入到其Goner的属性；")]),t._v(" "),s("li",[t._v("Goner的属性可以被其Goners注入。")])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("为什么只能内嵌 `gone.Flag`实现**Goner**接口？")]),t._v(" "),s("p",[t._v("下面是Goner和gone.Flag的源代码：")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Flag "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("g "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("Flag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("goneFlag")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//...")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Goner 逝者")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Goner "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("goneFlag")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Goner作为接口，要求实现它的“对象”拥有一个私有的方法"),s("code",[t._v("goneFlag()")]),t._v("；由于go语言可见性的限制，不能在"),s("code",[t._v("github.com/gone-io/gone")]),t._v("以外的包中实现其内部定义的私有方法；一个结构体要成为Goner，只能通过内嵌"),s("code",[t._v("gone.Flag")]),t._v("才能“继承”私有的方法"),s("code",[t._v("goneFlag()")]),t._v("。这段话可能有些不好理解，其实就是说Goner的实现只能通过内嵌gone.Flag来完成，不能通过实现"),s("code",[t._v("goneFlag()")]),t._v("方法来完成。")])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),s("p",[t._v("多个"),s("strong",[t._v("Goner")]),t._v("，我们使用其复数形式（"),s("strong",[t._v("Goners")]),t._v("）表示。")])]),t._v(" "),s("h2",{attrs:{id:"特殊goners"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#特殊goners"}},[t._v("#")]),t._v(" 特殊Goners")]),t._v(" "),s("h3",{attrs:{id:"🔮prophet-先知-率先知道装配完成"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#🔮prophet-先知-率先知道装配完成"}},[t._v("#")]),t._v(" 🔮Prophet（先知，率先知道装配完成）")]),t._v(" "),s("p",[t._v("一种特殊的 "),s("strong",[t._v("Goner")]),t._v("，在普通 "),s("strong",[t._v("Goner")]),t._v(" 上实现了 "),s("strong",[s("code",[t._v("AfterRevive() AfterReviveError")])]),t._v(" 方法就是 "),s("strong",[t._v("Prophet（先知）")]),t._v("；"),s("strong",[t._v("AfterRevive")]),t._v(" 会在所有 "),s("strong",[t._v("Goners")]),t._v(" 都完成依赖注入装配流程后被执行。")]),t._v(" "),s("p",[t._v("Prophet接口定义如下：")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Prophet  先知")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Prophet "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tGoner\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//AfterRevive 在所有Goners装配完后会被执行")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("AfterRevive")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("error")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"😇angel-天使-看护开始和结束"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#😇angel-天使-看护开始和结束"}},[t._v("#")]),t._v(" 😇Angel（天使，看护开始和结束）")]),t._v(" "),s("p",[t._v("一种特殊的 "),s("strong",[t._v("Goner")]),t._v("，拥有天使左翼"),s("code",[t._v("Start(Cemetery) error")]),t._v(" 和 天使右翼"),s("code",[t._v("Stop(Cemetery) error")]),t._v("，左翼负责开始（用于分配资源，启动某项服务），右翼负责结束（用于终止某项服务，回收资源）。")]),t._v(" "),s("p",[t._v("Angel接口定义如下：")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Angel "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tGoner\n\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Start")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Cemetery"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("error")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Stop")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Cemetery"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("error")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"🧛🏻‍♀️vampire-吸血鬼-扩展注入类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#🧛🏻‍♀️vampire-吸血鬼-扩展注入类型"}},[t._v("#")]),t._v(" 🧛🏻‍♀️Vampire（吸血鬼，扩展注入类型）")]),t._v(" "),s("p",[t._v("一种特殊的 "),s("strong",[t._v("Goner")]),t._v("，拥有特殊能力——“吸血”"),s("code",[t._v("Suck(conf string, v reflect.Value) SuckError")]),t._v("。"),s("strong",[t._v("Suck")]),t._v("可以将不是"),s("strong",[t._v("Goner")]),t._v("的值赋予注入给Goner属性。")]),t._v(" "),s("p",[t._v("Vampire接口定义如下：")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" SuckError "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("error")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Vampire "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tGoner\n\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Suck")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("conf "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v reflect"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" SuckError\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"cemetery-goners仓库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cemetery-goners仓库"}},[t._v("#")]),t._v(" Cemetery（Goners仓库）")]),t._v(" "),s("p",[t._v("Cemetery用于管理Goners，主要提供Bury（注册）和 revive（装配）的方法，其接口定义如下：")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Cemetery "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ... 其他方法")]),t._v("\n\tGoner\n\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Bury")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Goner"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("GonerId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" Cemetery  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将Goner注册到框架")]),t._v("\n\n\n\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//ReviveAllFromTombs 装配所有Goner")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ReviveAllFromTombs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("error")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//...")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("从代码上可以看到Cemetery本身也是一个Goner，在Gone框架启动时他自己也注册到Cemetery中。")]),t._v(" "),s("h3",{attrs:{id:"bury-注册"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bury-注册"}},[t._v("#")]),t._v(" Bury（注册）")]),t._v(" "),s("p",[t._v("将Goner "),s("strong",[t._v("注册")]),t._v(" 到 "),s("strong",[t._v("Cemetery（goners仓库）")]),t._v(" 就是将Goner注册到框架，以待装配流程完成属性的注入；在代码实现上，"),s("strong",[t._v("Bury")]),t._v("是"),s("strong",[t._v("Cemetery")]),t._v("上的公开方法，一般在通过 "),s("strong",[t._v("Priest")]),t._v(" 函数调用该方法。")]),t._v(" "),s("h3",{attrs:{id:"revive-装配"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#revive-装配"}},[t._v("#")]),t._v(" Revive（装配）")]),t._v(" "),s("p",[t._v("Revive（装配）指的是Goner所有需要注入的属性完成依赖装配的过程。在函数"),s("code",[t._v("ReviveAllFromTombs() error")]),t._v("中，尝试装配所有被注册的Goners，如果存在属性不能正常注入，程序将抛出panic。")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),s("p",[s("strong",[t._v("ReviveAllFromTombs")]),t._v("在完成了装配所有的"),s("strong",[t._v("Goners")]),t._v("后，会调用所有"),s("strong",[t._v("Prophet")]),t._v("的 "),s("strong",[t._v("AfterRevive")]),t._v("方法。")])]),t._v(" "),s("h2",{attrs:{id:"heaven"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#heaven"}},[t._v("#")]),t._v(" Heaven")]),t._v(" "),s("p",[t._v("Heaven（天国）代表了一个Gone程序，用于管理程序的启动、停止等状态和流程（装配在启动前完成），用于在启动前后以及程序停止前执行一些hook任务。Heaven接收一个牧师函数开始运行，例如：")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" main\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"github.com/gone-io/gone"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Priest")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cemetery gone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Cemetery"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("error")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 调用 cemetery.Bury 注册 Goner")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 或者 调用其他 Priest 函数")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// TODO")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tgone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Priest"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("或者：")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" main\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"github.com/gone-io/gone"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Priest")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cemetery gone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Cemetery"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("error")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 调用 cemetery.Bury 注册 Goner")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 或者 调用其他 Priest 函数")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// TODO")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tgone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Prepare")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Priest"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("AfterStart")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//TODO: 启动后执行一些操作")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"priest-批量注册goners"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#priest-批量注册goners"}},[t._v("#")]),t._v(" Priest (批量注册Goners)")]),t._v(" "),s("p",[t._v("Priest (牧师)是负责将"),s("strong",[t._v("Goner")]),t._v("注册到Gone的函数，他的定义如下：")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Priest "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cemetery Cemetery"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("error")]),t._v("\n")])])]),s("p",[t._v("在"),s("strong",[t._v("Priest")]),t._v("函数实现上，可以调用 "),s("strong",[t._v("cemetery.Bury")]),t._v(" 来完成，如下：")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Worker "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tgone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Flag\n\tName "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Boss "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tgone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Flag\n\n\tName "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("aPriest")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cemetery gone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Cemetery"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("error")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tcemetery"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Bury")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("Boss"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("Name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Jim"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"boss-jim"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tcemetery"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Bury")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("Worker"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("Name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Bob"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"worker-bob"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//匿名注册，不指定被注册Goner的GonerId")]),t._v("\n\tcemetery"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Bury")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("Worker"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("Name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"X"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//...")]),t._v("\n")])])]),s("p",[t._v("也可以通过调用其他的"),s("strong",[t._v("Priest")]),t._v("函数来完成：")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("a1Priest")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cemetery gone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Cemetery"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("error")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//todo")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("a2Priest")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cemetery gone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Cemetery"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("error")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//todo")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("aPriest")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cemetery gone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Cemetery"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("error")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("_")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("a1Priest")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cemetery"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("_")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("a2Priest")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cemetery"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//todo")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("如果开发了一个组件包使用了多个"),s("strong",[t._v("Goners")]),t._v("来实现相应的功能；使用时需要同时注册多个Goners，可能不是那么方便；为了方便用户使用我们开发的包，可以编写一个"),s("strong",[t._v("Priest")]),t._v("函数批量注册Goners。")]),t._v(" "),s("p",[t._v("Gone内置的组件包，我们就是这样做的，可以参考"),s("a",{attrs:{href:"https://github.com/gone-io/gone/blob/main/goner/priest.go",target:"_blank",rel:"noopener noreferrer"}},[t._v("代码"),s("OutboundLink")],1),t._v(" 和 "),s("a",{attrs:{href:"https://goner.fun/zh/goners/#%E6%A1%86%E6%9E%B6%E5%86%85%E7%BD%AEgoners",target:"_blank",rel:"noopener noreferrer"}},[t._v("文档"),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("p",[t._v("另外，我们开发了一个命令行辅助工具 "),s("strong",[s("a",{attrs:{href:"https://goner.fun/zh/references/gone-tool.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("gone"),s("OutboundLink")],1)]),t._v("，用于扫描特殊注释"),s("code",[t._v("//go:gone")]),t._v("自动生成牧师函数，参考 "),s("RouterLink",{attrs:{to:"/zh/guide/auto-gen-priest.html"}},[t._v("自动生成Priest")]),t._v("。")],1),t._v(" "),s("h2",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),s("p",[t._v("在Gone中，组件叫"),s("code",[t._v("Goner")]),t._v("（逝者），称为Goner需要嵌入"),s("code",[t._v("gone.Flag")]),t._v("（死亡标记），Goner被注册（埋在）到 "),s("code",[t._v("Cemetery")]),t._v("（墓园）中；Gone启动时，自动装配（Revive）所有Goners，建立一个天国（Gone程序），在天国中有先知、天使和吸血鬼。")]),t._v(" "),s("p",[t._v("是不是很有意思呢？")])])}),[],!1,null,null,null);s.default=e.exports}}]);